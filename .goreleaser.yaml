# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
version: 2

project_name: wafer

before:
  hooks:
    - go mod tidy

builds:
  - id: wafer
    main: ./cmd/wafer/main.go
    binary: wafer
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
      - arm
    goarm:
      - 6
      - 7
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.gitCommit={{ .Commit }}
      - -X main.buildTime={{ .Date }}

archives:
  - name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - LICENSE
      - README.md
      - VERSION
      - CHANGELOG.md

checksum:
  name_template: "checksums.txt"

release:
  github:
    owner: duy-tung
    name: wafer
  draft: false
  prerelease: auto
  mode: replace

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^chore:"
      - "^style:"
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: Bug Fixes
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999

dockers:
  - image_templates:
      - "ghcr.io/duy-tung/wafer:{{ .Version }}"
      - "ghcr.io/duy-tung/wafer:latest"
    dockerfile: Dockerfile.goreleaser
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.description=Production-ready Go CLI tool for text processing and embedding generation"
